#!/usr/bin/env bash

scriptdir="${0%/*}" # get dirname of $0 ($0 is the name of the current script)
. "${scriptdir}/nmaahcmmfunctions" ||
{ echo "Missing '${scriptdir}/nmaahcmmfunctions'. Exiting." ;
exit 1 ;} # The right side of && will only be evaluated if the exit status of the left side is zero.
          # || is the opposite: it will evaluate the right side only if the left side exit status is nonzero.
_setcolors # assigns colors using a function defined in nmaahcmmfunctions
_initialize_make # safe script termination process defined in nmaahcmmfunctions

## USAGE

usage(){
  echo
  echo "$(basename "${0}")"
  echo "This application will compare frame MD5s between two video files. It takes two text files as arguments. The text files must list the frame MD5s of the relevant video files. The results of a diff command will be displayed within the terminal."
  echo "Usage: $(basename ${0}) file1.txt file2.txt"
  echo
  exit
}
[ "${#}" = 0 ] && usage # if the the command is run with no arguments then usage is called
# getopts loop - if the operator runs "[scriptname] -h" then the usage text above will display in the terminal
OPTIND=1
while getopts ":h" OPT; do
    case "${OPT}" in
        h) usage ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

## SCRIPT ACTIONS

input1="${1}" # $1 is the first argument (file that the operator supplied)
input2="${2}" # $2 is the second argument (file that the operator supplied)

# compare the 6th field of each text file (which is where the checksums for each frame are expected to appear)
# diff --suppress-common-lines outputs only the lines that are NOT identical in both files
diff --side-by-side --width=200 --suppress-common-lines <(cat "${input1}" | cut -d, -f 6) <(cat "${input2}" | cut -d, -f 6)

printf "${biwhite}diffFrameMD5 process complete.${color_off}\n"
