#!/usr/bin/env bash

#a script to create md5 checksums of all files in a directory or a single file and save it to a .md5 file

# load nmaahcmmfunctions into this script
script_path=${0%/*}
. "${script_path}/nmaahcmmfunctions"
[[ -f "${script_path}/nmaahcmmfunctions" ]] || { echo "Missing '${script_path}/nmaahcmmfunctions'. Exiting." ; exit 1 ;};
_setcolors # assigns colors using a function defined in nmaahcmmfunctions
_initialize_make # safe script termination process defined in nmaahcmmfunctions

### USAGE

usage(){
    echo
    echo "$(basename "${0}")"
    echo "This application creates md5 checksums. If you pass a single file as input, the application will create a checksum for that file and save it in a .md5 file. If you pass a directory as input, the application will create a checksum for every file in the directory and save them in .md5 files (one .md5 file for each original file)."
    echo "Usage: $(basename ${0}) fileorpackage1 fileorpackage2 [fileorpackage3...]"
    echo
    exit
}
[ "${#}" = 0 ] && usage # if the the command is run with no arguments then usage is called
# getopts loop - if the operator runs "[scriptname] -h" then the usage text above will display in the terminal
OPTIND=1
while getopts ":h" OPT; do
    case "${OPT}" in
        h) usage ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

### FUNCTIONS

makechecksum(){
    echo
    while [[ $# -gt 0 ]] ; do
        1
        input="${1}" #name $input as the first argument sent to script

        if [ -d "${input}" ] ; then #if argument is a directory, run md5deep
            target="${input%/}" #strip the trailing /, if any
            target="${target##*/}" #drop the leading directory components i.e. get basename
            output="${input}/${target}_${date}_checksums.md5" #set .md5 file as $output
            printf "%s%s%s is a directory.\n" "${biwhite}" "${target}" "${color_off}"
            printf "Making checksums of all files in %s%s%s\n" "${biwhite}" "${target}" "${color_off}"
            printf "Writing to %s%s%s\n" "${biwhite}" "${output}" "${color_off}"
            md5deep -bre "${input}" >> "${output}" #create md5 hash (hashes) of $input and write results to $output. -b=strip leading directory info, -r=recursive, -e=display progress indicator
        fi

        if [ -f "${input}" ] ; then #if argument is a file, run md5deep
            target="${input##*/}" #get basename of $input
            target="${target%.*}" #strip extension from $target
            output="${input%/*}" #get full path parent dirname of $input
            output="${output}/${target}_${date}_checksums.md5" #set .md5 file as $output
            printf "%s%s%s is a file.\n" "${biwhite}" "${input##*/}" "${color_off}"
            printf "Making checksum of %s%s%s\n" "${biwhite}" "${input##*/}" "${color_off}"
            printf "Writing to %s%s%s\n" "${biwhite}" "${output}" "${color_off}"
            md5deep -bre "${input}" >> "${output}" #create md5 hash (hashes) of $input and write results to $output. -b=strip leading directory info, -r=recursive, -e=display progress indicator
        fi

        echo
        printf "Sorting %s%s%s\n" "${biwhite}" "${output##*/}" "${color_off}"
        sort -k 2 -o "${output}" "${output}" #sort $output. -k 2=sort on the second field, -o=write output to file (instead of standard terminal output)
        shift
        echo
            if [[ $# -gt 0 ]] ; then
                printf "Finished making checksums for %s%s%s.\n\n<>..<> Moving to %s%s%s\n" "${biwhite}" "${input##*/}" "${color_off}" "${biwhite}" "${1##*/}" "${color_off}"
                echo
            else
                printf "Finished making checksums for %s%s%s.\nNothing left to checksum.\n" "${biwhite}" "${input##*/}" "${color_off}"
                echo
                cowsay "Tootles!"
            fi

    done
}

## SCRIPT ACTIONS

makechecksum "${@}"
printf "${biwhite}makechecksum process complete.${color_off}\n"
exit $?
