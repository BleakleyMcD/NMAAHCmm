#!/usr/bin/env bash

# a script to concat video files into a single file

# load nmaahcmmfunctions into this script
SCRIPT_PATH="${0%/*}"
. "${SCRIPT_PATH}/nmaahcmmfunctions"
[[ -f "${SCRIPT_PATH}/nmaahcmmfunctions" ]] || { echo "Missing '${SCRIPT_PATH}/nmaahcmmfunctions'. Exiting." ; exit 1 ;};
_setcolors # assigns colors using a function defined in nmaahcmmfunctions
_initialize_make # safe script termination process defined in nmaahcmmfunctions
unset DEPENDENCIES
DEPENDENCIES=(ffmpeg) # list dependencies required by script
_check_dependencies "${DEPENDENCIES[@]}" # defined in nmaahcmmfunctions

## USAGE

_usage(){
    echo
    echo "$(basename "${0}")"
    echo "This application will concatenate multiple video files into a single video file. It takes two or more video files as arguments, all of which must be stored in the same directory. Be sure to list the video files in order. You will be asked to supply the name of the new concatenated file."
    echo "Usage: $(basename ${0}) file1 file2 [ file3... ]"
    echo
    exit
}
[ "${#}" = 0 ] && _usage # if the command is run with no arguments then _usage is called
# getopts loop
OPTIND=1
while getopts ":h" OPT; do
    case "${OPT}" in
        h) _usage ;; # if the operator runs "[scriptname] -h" then the _usage text above will display in the terminal
        *) echo "Invalid option -${OPTARG}" ; _usage ;; # if the operator tries to use an option other than the ones listed above, the _usage text will display in the terminal
    esac
done
shift $(( ${OPTIND} - 1 ))

## FUNCTIONS

_makeconcat(){
    echo
    printf "%sPlease enter the name of the concatenated file to be created.\n\t For example, SC_0001_20171211_Mangum_R8_01\nEnter file name:%s " "${BIWHITE}" "${COLOR_OFF}"
    read -r CONCATFILE
    ## $CONCATFILE will be the name of both the $TXTFILE and the outputed concatenated file. Name well.
    echo
    while [ "${*}" != "" ] ; do # while the number of arguments is not zero do X
        for FILE in ${1} ; do # for the first argument do X
            suffix="${FILE##*.}" # set $suffix to whatever the extension of your $FILE is
            PATH="${FILE%/*}" # the $PATH is set as the dirname of the first argument
            TXTFILE="${PATH}/${CONCATFILE}.txt" # the $TXTFILE will be created in the same dir as the first argument and named after $CONCATFILE
            touch "${TXTFILE}" # the $TXTFILE is created, aka "touched"
            printf "FILE '${FILE}'\n" >> "${TXTFILE}" # the first argument is written to $TXTFILE in the appropriate syntax for ffmpeg
            shift # the script shifts from the first argument to the second argument. It will do this until there are no more arguments.
        done
    done
    CONCATFILE="${PATH}/${CONCATFILE}.$suffix"
    ffmpeg -f concat -safe 0 -i "${TXTFILE}" -c copy "${CONCATFILE}" # ffmpeg creates the concatenated FILE in the same directory as $FILEs
    echo
    cowsay "Done. Your concatenated video FILE is ready fo action." # cowsay tells it like it is.
    echo
    printf "Your concatenated file is: %s" "${CONCATFILE}\n"
}

## SCRIPT ACTIONS

# log script beginning
_log -b
_makeconcat "${@}"
# log script ending
_log -e
printf "${BIWHITE}makeconcat process complete.${COLOR_OFF}\n"
exit "$?"
