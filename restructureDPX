#!/usr/bin/env bash

#a script to create a the desired directory structure and filenames for DPX packages received from VFS

## check for nmaachmmfunctions

SCRIPTDIR=$(dirname "${0}")
. "${SCRIPTDIR}/nmaahcmmfunctions" || { echo "Missing '${SCRIPTDIR}/nmaahcmmfunctions'. Exiting." ; exit 1 ; }

### CONSTANTS

biwhite=$(tput bold)$(tput setaf 7)
bired=$(tput bold)$(tput setaf 1)
color_off=$(tput sgr0)

### FUNCTIONS

restructureDPX ()

{
printf "%sPlease enter the number of reels your DPX package has: %s" "$biwhite" "$color_off"
read -r reelnumber
echo
printf '%sPlease enter DPX Object ID Number with underscores:\n' "$biwhite"
printf 'ex. 2015_167_10_1\n%s' "$color_off"
read -r dpxid
echo
printf '%sPlease enter DPX Object title with underscores:\n' "$biwhite"
printf 'ex. Juke_Joint\n%s' "$color_off"
read -r title
echo
printf '%sPlease enter destination for directory tree to be created:\n%s' "$biwhite" "$color_off"
read -r dest
echo
printf '%sPlease enter directory to be worked with:\n%s' "$biwhite" "$color_off"
read -r input

case "$reelnumber" in
	1 )
	#make $destination directory inside of $dest ex. 2012_79_1_54__Something_to_Build_On
	destination=("$dest"/"$dpxid"__"$title")
	mkdir "$destination"

	echo
	printf "%sMoving files from %s $input\n" "$biwhite" "$color_off"
	#find and move any .wav files fom $input to $destination
	if [ -d "$destination" ] ; then
		if [ -f "$input"/**/*.wav ] ; then
			mkdir "$destination"/"$dpxid"__"$title"__Audio &&
			aud=("$destination"/"$dpxid"__"$title"__Audio) &&
			printf "\n\t%sFound .wav file.\n\tMoving to:\n\t%s%s\n" "$biwhite" "$aud" "$color_off" &&
			find "$input" -type f -name "*.wav" -exec mv -vi {} "$aud"  \;
		else
			printf "\n\t%sNo .wav file found.%s\n" "$biwhite" "$color_off"
		fi
	else
		printf "%sMissing%s %s" "$bired" "$color_off" "$destination"
		exit 1
	fi
	#find and move and .mov files from $input to $destination
	if [ -d "$destination" ] ; then
		if [ -f "$input"/**/*.mov ] ; then
			mkdir "$destination"/"$dpxid"__"$title"__Derivatives &&
			der=("$destination"/"$dpxid"__"$title"__Derivatives) &&
			printf "\n\t%sFound .mov file.\n\tMoving to:\n\t%s%s\n" "$biwhite" "$der" "$color_off" &&
			find "$input" -type f -name "*.mov" -exec mv -vi {} "$der" \;
		else
			printf "\n\t%sNo .mov file found.%s\n" "$biwhite" "$color_off"
		fi
	else
		printf "%sMissing%s %s" "$bired" "$color_off" "$destination"
		exit 1
	fi
	#move DPX directory from $input to $destination and rename
	if [ -d "$destination" ] ; then
		mkdir "$destination"/"$dpxid"__"$title"__DPX &&
		dpx=("$destination"/"$dpxid"__"$title"__DPX) &&
		find "$input" -type d -name "*DPX" -exec mv -vi {} "$dpx" \;
	else
		printf "%sMissing%s %s" "$bired" "$color_off" "$destination"
		exit 1
	fi
	echo
	#find the .wav and .mov files and rename them according to NMAAHC naming structures
	printf "%sReaming files in:\n\t%s%s\n" "$biwhite" "$color_off" "$destination"
	if [ -d "$aud" ] ; then
		find "$aud" -name "*.wav" -exec mv -vi {} "$aud"/"$dpxid"_AUD.wav \;
		printf "\n\t%srenamed audio file to: %s%s\n" "$biwhite" "$color_off" "$dpxid"_AUD.wav
	fi
	if [ -d "$der" ] ; then
		find "$der" -name "*ProRes*.mov" -exec mv -vi {} "$der"/"$dpxid"_DER_01.mov \;
		printf "\n\t%srenamed prores file to: %s%s\n" "$dpxid"_DER_01.mov
	fi
	find "$der" -name "*Uncompressed.mov" -exec mv -vi {} "$der"/"$dpxid"_DER_02.mov \;
	echo
	#remove the $input directory
	printf "%sRemoving:\n\t%s%s\n" "$biwhite" "$color_off" "$input"
	rm -vri "$input"
	;;

	2 )
	destination=("$dest"/"$dpxid"__"$title")
	mkdir "$destination"

	R1=("$destination"/"$dpxid"__"$title"_R1/"$dpxid"__"$title"_R1)
	mkdir -p "$R1"

	audR1="$R1"__Audio
	mkdir -p "$audR1"

	derR1="$R1"__Derivatives
	mkdir -p "$derR1"

	dpxR1="$R1"__DPX
	mkdir -p "$dpxR1"

	R2=("$destination"/"$dpxid"__"$title"_R2/"$dpxid"__"$title"_R2)
	mkdir -p "$R2"

	audR2="$R2"__Audio
	mkdir -p "$audR2"

	derR2="$R2"__Derivatives
	mkdir -p "$derR2"

	dpxR2="$R2"__DPX
	mkdir -p "$dpxR2"
	echo
	printf "%sMoving files from%s %s" "$biwhite" "$color_off" "$input"

	if [ -d "$audR1" ] ; then
		find "$input" -name "*R1*.wav" -exec mv -vi {} "$audR1" \;
	else
		printf "%sMissing $audR1%s" "$bired" "$color_off"
		exit 1
	fi
	if [ -d "$derR1" ] ; then
		find "$input" -name "*R1*.mov" -exec mv -vi {} "$derR1" \;
	else
		printf "%sMissing $derR1%s" "$bired" "$color_off"
		exit 1
	fi
	if [ -d "$dpxR1" ] ; then
		find "$input" -name "*R1*.dpx" -exec mv -vi {} "$dpxR1" \;
	else
		printf "%sMissing $dpxR1%s" "$bired" "$color_off"
		exit 1
	fi

	if [ -d "$audR2" ] ; then
		find "$input" -name "*R2*.wav" -exec mv -vi {} "$audR2" \;
	else
		printf "%sMissing $audR2%s" "$bired" "$color_off"
		exit 1
	fi
	if [ -d "$derR2" ] ; then
		find "$input" -name "*R2*.mov" -exec mv -vi {} "$derR2" \;
	else
		printf "%sMissing $derR2%s" "$bired" "$color_off"
		exit 1
	fi
	if [ -d "$dpxR2" ] ; then
		find "$input" -name "*R2*.dpx" -exec mv -vi {} "$dpxR2" \;
	else
		printf "%sMissing $dpxR2%s" "$bired" "$color_off"
		exit 1
	fi

	echo
	printf "%sReaming files in %s%s\n" "$biwhite" "$color_off" "$destination"
	find "$audR1" -name "*R1*.wav" -exec mv -vi {} "$audR1"/"$dpxid"_R1_AUD.wav \;
	find "$derR1" -name "*R1*ProRes*.mov" -exec mv -vi {} "$derR1"/"$dpxid"_R1_DER_01.mov \;
	find "$derR1" -name "*R1*Uncompressed*.mov" -exec mv -vi {} "$derR1"/"$dpxid"_R1_DER_02.mov \;
	find "$audR2" -name "*R2*.wav" -exec mv -vi {} "$audR2"/"$dpxid"_R2_AUD.wav \;
	find "$derR2" -name "*R2*ProRes*.mov" -exec mv -vi {} "$derR2"/"$dpxid"_R2_DER_01.mov \;
	find "$derR2" -name "*R2*Uncompressed*.mov" -exec mv -vi {} "$derR2"/"$dpxid"_R2_DER_02.mov \;

	echo
	printf "%sRemoving %s\n" "$biwhite" "$color_off" "$input"
	rm -vri "$input"
	;;

	3 )
	destination=("$dest"/"$dpxid"__"$title")
	mkdir "$destination"

	R1=("$destination"/"$dpxid"__"$title"_R1/"$dpxid"__"$title"_R1)
	mkdir -p "$R1"

	audR1="$R1"__Audio
	mkdir -p "$audR1"

	derR1="$R1"__Derivatives
	mkdir -p "$derR1"

	dpxR1="$R1"__DPX
	mkdir -p "$dpxR1"

	R2=("$destination"/"$dpxid"__"$title"_R2/"$dpxid"__"$title"_R2)
	mkdir -p "$R2"

	audR2="$R2"__Audio
	mkdir -p "$audR2"

	derR2="$R2"__Derivatives
	mkdir -p "$derR2"

	dpxR2="$R2"__DPX
	mkdir -p "$dpxR2"

	R3=("$destination"/"$dpxid"__"$title"_R3/"$dpxid"__"$title"_R3)
	mkdir -p "$R3"

	audR3="$R3"__Audio
	mkdir -p "$audR3"

	derR3="$R3"__Derivatives
	mkdir -p "$derR3"

	dpxR3="$R3"__DPX
	mkdir -p "$dpxR3"

	echo
	printf "%sMoving files from%s %s" "$biwhite" "$color_off" "$input"

	if [ -d "$audR1" ] ; then
		find "$input" -name "*R1*.wav" -exec mv -vi {} "$audR1" \;
	else
		printf "%sMissing $audR1%s" "$bired" "$color_off"
		exit 1
	fi
	if [ -d "$derR1" ] ; then
		find "$input" -name "*R1*.mov" -exec mv -vi {} "$derR1" \;
	else
		printf "%sMissing $derR1%s" "$bired" "$color_off"
		exit 1
	fi
	if [ -d "$dpxR1" ] ; then
		find "$input" -name "*R1*.dpx" -exec mv -vi {} "$dpxR1" \;
	else
		printf "%sMissing $dpxR1%s" "$bired" "$color_off"
		exit 1
	fi

	if [ -d "$audR2" ] ; then
		find "$input" -name "*R2*.wav" -exec mv -vi {} "$audR2" \;
	else
		printf "%sMissing $audR2%s" "$bired" "$color_off"
		exit 1
	fi
	if [ -d "$derR2" ] ; then
		find "$input" -name "*R2*.mov" -exec mv -vi {} "$derR2" \;
	else
		printf "%sMissing $derR2%s" "$bired" "$color_off"
		exit 1
	fi
	if [ -d "$dpxR2" ] ; then
		find "$input" -name "*R2*.dpx" -exec mv -vi {} "$dpxR2" \;
	else
		printf "%sMissing $dpxR2%s" "$bired" "$color_off"
		exit 1
	fi

	if [ -d "$audR3" ] ; then
		find "$input" -name "*R3*.wav" -exec mv -vi {} "$audR3" \;
	else
		printf "%sMissing $audR3%s" "$bired" "$color_off"
		exit 1
	fi
	if [ -d "$derR3" ] ; then
		find "$input" -name "*R3*.mov" -exec mv -vi {} "$derR3" \;
	else
		printf "%sMissing $derR3%s" "$bired" "$color_off"
		exit 1
	fi
	if [ -d "$dpxR3" ] ; then
		find "$input" -name "*R3*.dpx" -exec mv -vi {} "$dpxR3" \;
	else
		printf "%sMissing $dpxR3%s" "$bired" "$color_off"
		exit 1
	fi

	echo
	printf "%sReaming files in %s%s\n" "$biwhite" "$color_off" "$destination"
	find "$audR1" -name "*R1*.wav" -exec mv -vi {} "$audR1"/"$dpxid"_R1_AUD.wav \;
	find "$derR1" -name "*R1*ProRes*.mov" -exec mv -vi {} "$derR1"/"$dpxid"_R1_DER_01.mov \;
	find "$derR1" -name "*R1*Uncompressed*.mov" -exec mv -vi {} "$derR1"/"$dpxid"_R1_DER_02.mov \;
	find "$audR2" -name "*R2*.wav" -exec mv -vi {} "$audR2"/"$dpxid"_R2_AUD.wav \;
	find "$derR2" -name "*R2*ProRes*.mov" -exec mv -vi {} "$derR2"/"$dpxid"_R2_DER_01.mov \;
	find "$derR2" -name "*R2*Uncompressed*.mov" -exec mv -vi {} "$derR2"/"$dpxid"_R2_DER_02.mov \;
	find "$audR3" -name "*R3*.wav" -exec mv -vi {} "$audR3"/"$dpxid"_R3_AUD.wav \;
	find "$derR3" -name "*R3*ProRes*.mov" -exec mv -vi {} "$derR3"/"$dpxid"_R3_DER_01.mov \;
	find "$derR3" -name "*R3*Uncompressed*.mov" -exec mv -vi {} "$derR3"/"$dpxid"_R3_DER_02.mov \;

	echo
	printf "%sRemoving \n" "$biwhite" "$color_off" "$input"
	rm -vri "$input"
	;;

	*	)
	printf '%sERROR. Presently, this script can only handle DPX packages of 1 or 2 or 3 reels. Check back later.' "$bired"
	echo
	cowsay 'SORRY!'
	;;

esac
}

#call the function(s)

restructureDPX "$@"

exit $?
