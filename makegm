#!/usr/bin/env bash

# create Great Migration directory structur as set in GMconfig

### CONSTANTS

biwhite=$(tput bold)$(tput setaf 7)
bired=$(tput bold)$(tput setaf 1)
color_off=$(tput sgr0)
today=$(date +"%Y%m%d")

script_path=${0%/*}
# script_path will be the directory path of {0} which is the script being called
. "$script_path/nmaahcmmfunctions"
# You can't directly call a function in another shell script.
# You can move your function definitions into a separate file and then load them into your script using the . command, like this:
# . /path/to/functions.sh
# This will interpret functions.sh as if it's content were actually present in your file at this point.
# This is a common mechanism for implementing shared libraries of shell functions.
[[ -f "$script_path/nmaahcmmfunctions" ]] || { echo "Missing '$script_path/nmaahcmmfunctions'. Exiting." ; exit 1 ;};
# will check to see that that nmaahcmmfunctions exists and if it doesn't (left side of || exits non-zero) then it will execute the right side of ||

### FUNCTIONS

makegm ()

{
	GM_DIR=${GM_DIR}/${today}_${GM_PROFILE_LAST}_${GM_PROFILE_FIRST}
	mkdir -p $GM_DIR
	if [ "$GM_FORMATS_VHS" = "1" ] ; then
		mkdir -p "$GM_DIR/VHS/ACCESS"
		mkdir -p "$GM_DIR/VHS/PRESERVATION"
	fi
	if [ "$GM_FORMATS_R8" = "1" ] ; then
		mkdir -p "$GM_DIR/Regular8/ACCESS"
		mkdir -p "$GM_DIR/Regular8/PRESERVATION"
	fi
}

#call the function(s)

makegm "$@"

exit "$?"
