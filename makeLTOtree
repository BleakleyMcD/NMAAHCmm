#!/usr/bin/env bash

# a script to create a manifest of contents on an LTO tape, copy it to the tape and then copy it to a specified adtional folder (Google Drive)

### CONSTANTS

biwhite=$(tput bold)$(tput setaf 7)
# bired=$(tput bold)$(tput setaf 1)
color_off=$(tput sgr0)

### FUNCTIONS

makeLTOtree ()

{
while [ "${*}" != "" ] ; do
	input="$1"
	#name target as the filename of input
	target=$(basename "$input")
	shift
	#specify folder location
	folder="$HOME/Google Drive/00_LTO_filemetadata/${target}_filemetadata"
	#create folder
	mkdir -p "$folder"
	#set the date to append to filename
	today=$(date +"%Y%m%d")
	#define what the drive is if it is not the input
	drive="$input"
	#if the drive is a directory, some sort of test operator, trying to say if the drive exists, do this thing to it
	if [ -d "$drive" ] ; then
		#run tree and ls commands
		printf "%swriting contents_ls\nwriting contents_tree\nwriting contents_treeShort%s" "$biwhite" "$color_off"
		ls "$drive/$target" >> "$folder/${target}_contents_ls_${today}.txt" &&
		tree -RapugD --si --du "$drive" >> "$folder/${target}_contents_treeLong_$today.txt" &&
		tree --filelimit 30 --si --du -UQRapugD "$drive" >> "$folder/${target}_contents_treeShort_$today.txt" ;

	fi
	#write metadata to $folder and then write $folder to $target
	echo
	printf "%swriting $target.schema, $target_writelto.txt and $target_ReadBack_checksum.md5 to $folder\n" "$biwhite"
	find /Users/medialab/Documents/ -name "$target"* -type f -exec rsync -avPhi {} "$folder" \;
	echo
	printf "changing $folder permissions to 777\n"
	chmod -vR 777 "$folder"
	echo
	printf "writing contents of $folder to $input\n"
	rsync -avPhi "$folder" "$input"
	echo
	printf "makeTree is finished writing to $input"
done
}

#call the function(s)

makeLTOtree "$@"

exit "$?"
