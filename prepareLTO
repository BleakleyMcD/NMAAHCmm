#!/usr/bin/env bash

# a script to create a manifest of contents on an LTO tape, copy it to the tape and then copy it to a specified adtional folder

### CONSTANTS

biwhite=$(tput bold)$(tput setaf 7)
bired=$(tput bold)$(tput setaf 1)
color_off=$(tput sgr0)
today=$(date +"%Y%m%d")

script_path=${0%/*}
# script_path will be the directory path of {0} which is the script being called
. "$script_path/nmaahcmmfunctions"
# You can't directly call a function in another shell script.
# You can move your function definitions into a separate file and then load them into your script using the . command, like this:
# . /path/to/functions.sh
# This will interpret functions.sh as if it's content were actually present in your file at this point.
# This is a common mechanism for implementing shared libraries of shell functions.
[[ -f "$script_path/nmaahcmmfunctions" ]] || { echo "Missing '$script_path/nmaahcmmfunctions'. Exiting." ; exit 1 ;};
# will check to see that that nmaahcmmfunctions exists and if it doesn't (left side of || exits non-zero) then it will execute the right side of ||

### FUNCTIONS

prepareLTO ()

{
	drive="$1"
	target="${drive%/}" #strip the trailing /, if any
	target="${target##*/}" #name $target as the basename of $drive

	if [ -d "$drive" ] ; then
		#delete .DS_Store from $drive
		echo
		printf "%sfinding .DS_Store on %s and deleting%s\n" "$biwhite" "$target" "$color_off"
	 	removehidden "$drive"
	else
		printf "$drive is not a valid input. exiting"
		exit
	fi
checksumtxt="$drive"/"$target"_checksums.txt
	find "$drive" -name "*.md5" -exec cat {} >> "$checksumtxt"
	find "$drive" -name "*.md5" -exec md5deep -bre {} >> "$checksumtxt"
	sortk2
}

#call the function(s)

prepareLTO "$@"

exit "$?"
