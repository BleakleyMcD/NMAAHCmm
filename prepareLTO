#!/usr/bin/env bash

# a script to create a manifest of contents on an LTO tape, copy it to the tape and then copy it to a specified adtional folder

### CONSTANTS

biwhite=$(tput bold)$(tput setaf 7)
bired=$(tput bold)$(tput setaf 1)
color_off=$(tput sgr0)
today=$(date +"%Y%m%d")

### FUNCTIONS

prepareLTO ()

{
	drive="$1"
	target="${drive%/}" #strip the trailing /, if any
	target="${target##*/}" #name $target as the basename of $drive
	lto="/Volumes/UtilitySAN/LTO/LTO/"
	ulto="/Volumes/UtilitySAN/LTO/LTO/$target"
	folder="/Volumes/UtilitySAN/07_LTO_filemetadata/"
	chksumfolder="$HOME/Documents/lto_indexes/readbackchecksums/"

	if [ -d "$drive" ] ; then
		#delete .DS_Store from $drive
		echo
		printf "finding .DS_Store on %s and deleting" "$target"
	 	find "$drive" -name ".DS_Store" -exec rm -vfr {} \;
		echo
		#delete filemetadata from $drive
		printf "deleting %s filemetadata from %s" "$target" "$drive"
		rm -vri "$drive/$target"_filemetadata
		echo
		#copy checksum file from $drive
		printf "copying checksum file from %s to %s" "$target" "$ulto"
		if [ ! $ulto ] ; then
			mkdir -pv $ulto
		fi
		cp -v "$drive/$target/"*.txt "$ulto"
		echo
		#delete checksum file from $drive
		printf "deleting checksum file from %s" "$target"
		rm -vri "$drive/$target"*.txt
		echo
	else
		printf "%s%s does not exist. Exiting.%s" "$bired" "$drive" "$color_off"
		exit
	fi
	#delete the old filemetatdata folder in $folder
	printf "deleting old %s filemetatdata folder in %s" "$target" "$folder"
	find "$folder" -name "$target"* -exec rm -vri {} \;
	echo
	#delete old readbackchecksum file in $chksumfolder
	printf "deleting old %s readbackchecksum file in %s" "$target" "$chksumfolder"
	find "$chksumfolder" -name "$target"* -exec rm -vi {} \;
	echo
	#combine checksum files in $ulto into one file
	printf "%s is now ready to write to.\n" "$target"
	read -e -p "press return if you would like to now write $ulto to $drive. Press any other key to exit program."

	if [[ "$REPLY" == "" ]] ; then
		time writelto -v -e N -t "$target" "$lto"
	else
		echo "Exiting program."
		exit 1
	fi
}

#call the function(s)

prepareLTO "$@"

exit "$?"
